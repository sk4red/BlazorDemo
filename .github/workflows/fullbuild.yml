name: Build, Publish & Release
on: [push, pull_request]

jobs:
  test:
    name: Debug Build & Test
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core 5.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build
      run: dotnet build src/BlazorApp.csproj -c Debug
   

  release:
    name: Create Github Release
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
    - name: Output Release URL File
      run: echo ${{ steps.create_release.outputs.upload_url }} > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
      
    
  publish:
    needs: [test, release]
    runs-on: ubuntu-latest
 
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
    - uses: actions/checkout@v1
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
        path: .
    - name: Setup .NET Core 5.0 (current)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build 
      shell: bash
      run: |
         
          # Build everything
          dotnet publish src/BlazorApp.csproj -c Release --self-contained -o "BlazorDemo"
          7z a -tzip "${BlazorDemo}.zip" "./${BlazorDemo}/*"

    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
       echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v} #ex. RepositoryName-1.0.0
       value=`cat release_url.txt`
       echo ::set-output name=upload_url::$value
      env:
        TAG_REF_NAME: ${{ github.ref }}
        REPOSITORY_NAME: ${{ github.repository }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./BlazorDemo.zip
        asset_name: BlazorDemo.zip
        asset_content_type: application/zip
